# switch to C-a (like screen) instead of C-b as control keybind
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# fix truecolor in some terminals
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',alacritty:Tc,xterm-256color:Tc'



### keybinds

# switch tabs with Ctrl-Page{Up,Down}, move tabs with Shift-<same>
bind -n C-Pageup select-window -t -1
bind -n C-Pagedown select-window -t +1
bind -n C-S-Pageup swap-window -t -1 \; select-window -t -1
bind -n C-S-Pagedown swap-window -t +1 \; select-window -t +1

# split windows with prefix + {|,-}
# note: rebound below
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# navigate between panes with Ctrl-Alt-{Left,Right,Up,Down}, swap panes with Shift-<same>
bind -n C-M-Left select-pane -L
bind -n C-M-Right select-pane -R
bind -n C-M-Up select-pane -U
bind -n C-M-Down select-pane -D
bind -n C-S-M-Left select-pane -L \; swap-pane -t !
bind -n C-S-M-Right select-pane -R \; swap-pane -t !
bind -n C-S-M-Up select-pane -U \; swap-pane -t !
bind -n C-S-M-Down select-pane -D \; swap-pane -t !



### hot spares

# we could do this a lot cleaner with a guarantee that wlr-tmux-prepare-hot-spares is on the PATH
# but that's not currently guaranteed by our env setup, so we hack it together here instead
# TODO how can we always grab the *oldest* hot spare, so it's had the most time to finish starting up?
# right now I'm pretty sure we grab the newest

# "if-shell 'tmux <command>' 'run-shell true'" is a hack to let the command pipeline continue even if <command> fails
# i.e. it's analogous to '<command> || true' in bash with set -e

## initial setup
# create hot-spares session, if it doesn't exist
# make sure it has 3 windows in it
if-shell 'tmux new-session -d -s hot-spares' 'run-shell true'
if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares'
if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares'

## "open new window"
# create hot-spares if it doesn't exist
# grab a window from hot-spares (if this is the only window, this destroys hot-spares)
# rerun our initial setup
unbind c
bind c {
    if-shell 'tmux new-session -d -s hot-spares' 'run-shell true'
    move-window -s hot-spares
    if-shell 'tmux new-session -d -s hot-spares' 'run-shell true'
    if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares:'
    if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares:'
}

## "split windows" with prefix + {|,-}
# same tricks as open new window
unbind |
bind | {
    if-shell 'tmux new-session -d -s hot-spares' 'run-shell true'
    join-pane -h -s hot-spares:$
    if-shell 'tmux new-session -d -s hot-spares' 'run-shell true'
    if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares:'
    if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares:'
}
unbind -
bind - {
    if-shell 'tmux new-session -d -s hot-spares' 'run-shell true'
    join-pane -v -s hot-spares:$
    if-shell 'tmux new-session -d -s hot-spares' 'run-shell true'
    if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares:'
    if-shell '[ "$(tmux list-windows -t hot-spares | wc -l)" -lt 3 ]' 'new-window -t hot-spares:'
}
